{
  "id": "ilqi01ug4rPx2fDO",
  "name": "AlexAI Crew Coordination Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "crew-request",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "request-analyzer",
      "name": "Request Analyzer",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        100,
        100
      ],
      "webhookId": "crew-request-webhook"
    },
    {
      "parameters": {
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.OPENROUTER_API_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "anthropic/claude-3.5-sonnet"
            },
            {
              "name": "messages",
              "value": "=[{\"role\": \"system\", \"content\": \"You are an AI crew coordinator for the AlexAI Star Trek system. Analyze the user request and select the most appropriate Star Trek crew member to respond. Consider: task type, complexity, emotional context, and technical depth. Return only the crew member name: captain-picard, lieutenant-data, counselor-troi, chief-engineer-scott, commander-spock, lieutenant-worf, or observation-lounge for group meetings.\"}, {\"role\": \"user\", \"content\": \"User Query: {{ $json.query }}\\nUser Context: {{ $json.context }}\\nUser Role: {{ $json.userRole }}\"}]"
            }
          ]
        },
        "options": {}
      },
      "id": "crew-selector",
      "name": "Crew Selector (OpenRouter)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        300,
        100
      ]
    },
    {
      "parameters": {
        "rules": {
          "rules": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "captain-picard",
                    "leftValue": "={{ $json.choices[0].message.content.toLowerCase() }}",
                    "rightValue": "captain-picard",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "output": 0
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "lieutenant-data",
                    "leftValue": "={{ $json.choices[0].message.content.toLowerCase() }}",
                    "rightValue": "lieutenant-data",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "output": 1
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "observation-lounge",
                    "leftValue": "={{ $json.choices[0].message.content.toLowerCase() }}",
                    "rightValue": "observation-lounge",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "output": 2
            }
          ]
        },
        "options": {}
      },
      "id": "crew-router",
      "name": "Crew Router",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 2,
      "position": [
        500,
        100
      ]
    },
    {
      "parameters": {
        "url": "={{ $env.NEXTJS_BASE_URL }}/api/crew/captain-picard",
        "authentication": "none",
        "method": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "={{ $('Request Analyzer').item.json.query }}"
            },
            {
              "name": "context",
              "value": "={{ $('Request Analyzer').item.json.context }}"
            }
          ]
        },
        "options": {}
      },
      "id": "captain-picard-response",
      "name": "Captain Picard Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        700,
        50
      ]
    },
    {
      "parameters": {
        "url": "={{ $env.NEXTJS_BASE_URL }}/api/crew/lieutenant-data",
        "authentication": "none",
        "method": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "={{ $('Request Analyzer').item.json.query }}"
            },
            {
              "name": "context",
              "value": "={{ $('Request Analyzer').item.json.context }}"
            },
            {
              "name": "userRole",
              "value": "={{ $('Request Analyzer').item.json.userRole }}"
            }
          ]
        },
        "options": {}
      },
      "id": "lieutenant-data-response",
      "name": "Lieutenant Data Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        700,
        150
      ]
    },
    {
      "parameters": {
        "url": "={{ $env.NEXTJS_BASE_URL }}/api/crew/observation-lounge",
        "authentication": "none",
        "method": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "meetingType",
              "value": "project-status"
            },
            {
              "name": "projectContext",
              "value": "={\"projectId\": \"alexai-platform\"}"
            }
          ]
        },
        "options": {}
      },
      "id": "observation-lounge-response",
      "name": "Observation Lounge Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        700,
        250
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "id": "response-handler",
      "name": "Response Handler",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        900,
        150
      ]
    }
  ],
  "connections": {
    "Request Analyzer": {
      "main": [
        [
          {
            "node": "Crew Selector (OpenRouter)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crew Selector (OpenRouter)": {
      "main": [
        [
          {
            "node": "Crew Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crew Router": {
      "main": [
        [
          {
            "node": "Captain Picard Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Lieutenant Data Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Observation Lounge Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Captain Picard Response": {
      "main": [
        [
          {
            "node": "Response Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lieutenant Data Response": {
      "main": [
        [
          {
            "node": "Response Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Observation Lounge Response": {
      "main": [
        [
          {
            "node": "Response Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": null,
  "versionId": "b74f7d57-9262-4c7f-8456-9ab4e7eecf40",
  "createdAt": "2025-08-10T21:37:48.496Z",
  "updatedAt": "2025-08-10T21:42:38.327Z"
}