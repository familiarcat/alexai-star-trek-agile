# ðŸ–– AlexAI Star Trek Agile System - Docker Compose Configuration
# Complete development environment for team collaboration

version: '3.8'

services:
  # Main application
  alexai-app:
    build: .
    container_name: alexai-star-trek-agile
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=True
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=sqlite:///agile_manager.db
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./.env:/app/.env
    depends_on:
      - redis
    networks:
      - alexai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/alexai/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: alexai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - alexai-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # PostgreSQL for production database (optional)
  postgres:
    image: postgres:15-alpine
    container_name: alexai-postgres
    environment:
      - POSTGRES_DB=alexai_agile
      - POSTGRES_USER=alexai
      - POSTGRES_PASSWORD=alexai_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - alexai-network
    restart: unless-stopped
    profiles:
      - production

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: alexai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - alexai-app
    networks:
      - alexai-network
    restart: unless-stopped
    profiles:
      - production

  # Monitoring and logging
  prometheus:
    image: prom/prometheus:latest
    container_name: alexai-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - alexai-network
    restart: unless-stopped
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: alexai-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=alexai_admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - alexai-network
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  alexai-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 